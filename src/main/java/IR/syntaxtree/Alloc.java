//
// Generated by JTB 1.3.2
//

package IR.syntaxtree;

import IR.visitor.GJNoArguVisitor;
import IR.visitor.GJVisitor;
import IR.visitor.GJVoidVisitor;
import IR.visitor.Visitor;

/**
 * Grammar production:
 * f0 -> Identifier()
 * f1 -> "="
 * f2 -> "alloc"
 * f3 -> "("
 * f4 -> Identifier()
 * f5 -> ")"
 */
public class Alloc implements Node {
   public Identifier f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeToken f3;
   public Identifier f4;
   public NodeToken f5;

   public Alloc(Identifier n0, NodeToken n1, NodeToken n2, NodeToken n3, Identifier n4, NodeToken n5) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
   }

   public Alloc(Identifier n0, Identifier n1) {
      f0 = n0;
      f1 = new NodeToken("=");
      f2 = new NodeToken("alloc");
      f3 = new NodeToken("(");
      f4 = n1;
      f5 = new NodeToken(")");
   }

   public void accept(Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

